continue
User.all[0]
User.first
continue
User.from_file User.all[0].path
User.all[0].valid?
User.all[0]
User.all.length
exit
User.all.each(&:destroy)
User.all.length
continue
tmsu_file.tags
continue
User.update_all(name: "max")
next
User.where(name: "max\\ p.")[0]
continue
u.tags
u.attributes
User.where(name: "max\\ p.")[0]
next
u.tags
next
User.where(name: "max\\ p.")[0]
next
u.tags
continue
u.tags
continue
User.where(name: "max p.")[0].name
User.where(name: "max p.")[0]
User.where(name: "max p.")
continue
User.where name: "max p"
User.find_by(name: "max p")
User.all.length
continue
`ls ~/tmsu_vfs/queries/"name=max\\ p"`
`tmsu files "name=max\\ p"`
`tmsu files "name=max\ p"`
`tmsu files name=max\ p`
`ls ~/tmsu_vfs/queries/"name=max\ p"`
`ls ~/tmsu_vfs/queries/name=max\\ p`
`ls ~/tmsu_vfs/queries/name=max\ p`
`ls ~/tmsu_vfs`
`tmsu tags #{u.path}`
u.tags
u.update name: "max p"
u.tags
u
continue
User.all
User.all.each(&:destroy)
User.all.last.destroy
User.all.last
User.all
u.tags
continue
User.all
User.all[-1].destroy
User.all.map &:tags
User.all[-1].tags
User.all[-1].destroy
User.all[-1]
User.all
User.all.each(&:destroy)
User.all
User.all.each &:destroy
User.all
u.attributes
continue
`tmsu tags #{uu.path}`
uu.tags
uu = new({}) { path }
new({}) { path }
new(path).tags
continue
 User.where(name: "max p.")
continue
 User.where(name: "max p.")
continue
User.where(name: "max p.")[0]
continue
 TmsuRuby.file(query_glob).paths_query(string)
continue
TmsuRuby.file(query_glob).paths_query(string)
string
continue
string
TmsuRuby.file(query_glob)
continue
User.all
continue
User.where()
User.all.length
continue
u.attributes
u
u.errors
continue
u.tags
continue
u.attributes
u.tags
next
u.tags
exit-program
continue
exit-program
continue
URI.unescape n
CGI.unescape n
n = u.tags["name"]
u.tags
continue
(cmd_res.chomp.split delimiter)
continue
(cmd_res.chomp.split delimiter)
continue
(cmd_res.chomp.split delimiter)
continue
(cmd_res.chomp.split delimiter)
continue
(cmd_res.chomp.split delimiter)
(cmd_res.chomp.split delimiter)[1..-1]
continue
(cmd_res.chomp.split delimiter)[1..-1]
continue
(cmd_res.chomp.split delimiter)[1..-1]
cmd_res.chomp.split delimiter
continue
cmd_res.chomp.split delimiter
continue
cmd_res.chomp.split delimiter
continue
cmd_res.chomp.split delimiter
continue
cmd_res.chomp.split delimiter
continue
cmd_res.chomp.split delimiter
cmd_res
continue
cmd_res.chomp.split(delimiter)
demiliter = /(?<!\\)\s/
cmd_res.chomp.split(delimiter)
cmd_res.chomp
cmd_res
continue
cmd_res
continue
cmd_res
continue
cmd_res
continue
cmd_res
continue
cmd_res
continue
u.tags
continue
tags
puts %{tmsu tag #{path} #{build_tag_arg tag_obj}}
%{tmsu tag #{path} #{build_tag_arg tag_obj}}
tags
system "tmsu tag ./db/users/2jR37Wo67YfzkqRdOuy7bg \"name=max\\ p.\" \"email=max.pleaner@gmail.com\""
tags
system "tmsu tag ./db/users/2jR37Wo67YfzkqRdOuy7bg \"name=max\ p.\" \"email=max.pleaner@gmail.com\""
"tmsu tag ./db/users/2jR37Wo67YfzkqRdOuy7bg \"name=max p.\" \"email=max.pleaner@gmail.com\""
%{tmsu tag #{path} #{build_tag_arg tag_obj}}
continue
%{tmsu tag #{path} #{build_tag_arg tag_obj}}
continue
%{tmsu tag #{path} #{build_tag_arg tag_obj}}
continue
u.tags
continue
u.destroy
u.tags
continue
u.tags
continue
u.tags
continue
u.tags
continue
u.destroy
continue
u.tags
continue
u.destroy
continue
u.destroy
continue
u.destroy
u.tags
continue
u.tags
continue
Shellwords.escape "a a"
require 'shellwords'
u.tags
continue
u.tags
next
continue
u.tags
next
u.tags
continue
u.tags
u.email
next
continue
`tmsu tags #{u.path}`
u.path
u.tags
u.save
u.email
u.tags
next
continue
u.email
next
u.email
u.update email: "foo@"
u.email
continue
a.to_s
a.to_source
a.source
a = -> { 1 }
u.valid?
next
continue
attributes.keys.include? :name
attributes.has_key? "name"
attributes.has_key? "
attributes.has_key? :name
attributes.has_key? 
attributes.keys
attributes
continue
Gem.find_files "tmsu_ruby/**/*"
Gem.find_files "tmsu_ruby/**/*"'
Gem.find_files "tmsu_file_db/*"
Gem.find_files "tmsu_file_db/*")
Gem.dir
Gem.find_files "lib/**/*"
Gem.find_files "lib/**/*")
Gem.find_files "tmsu_file_db/lib/*"
Gemfile.find_files "tmsu_file_db/lib/*"
Gem.find_files("tmsu_file_db/**/*")
Gem.find_files("tmsu_file_db/**/*.rb")
Gem.find_files("**/*.rb")
Gem.find_files("lib/**/*.rb")
